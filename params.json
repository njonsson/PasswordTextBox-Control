{"name":"PasswordTextBox Control","tagline":"A Windows Forms control that enables the user to enter password text, momentarily showing each character entered","body":"# _PasswordTextBox_ Control\r\n\r\n[![‘PasswordTextBox-Control’ NuGet package]][NuGet-package]\r\n\r\n> See what’s changed lately by reading the [project history][project-history].\r\n\r\nIt’s common knowledge that the\r\n[_UseSystemPasswordChar_][WinForms-UseSystemPasswordChar-property] and\r\n[_PasswordChar_][WinForms-PasswordChar-property] properties of the\r\n_System​.Windows​.Forms​.TextBox_ control let you obscure user input of secret\r\ninformation such as passwords. But you may have wanted behavior such as\r\ntouch-screen devices exhibit: user input is **momentarily displayed before being\r\nreplaced** by a password character. _TextBox_ can’t do that.\r\n\r\n_PasswordTextBox_ is what you were looking for.\r\n\r\n![PasswordTextBox control animated demonstration]\r\n\r\n## Features\r\n\r\n☑︎ Accept user input via the keyboard, the clipboard, and drag-and-drop  \r\n☑︎ Prevent the user or system from copying control content to the clipboard if a password character is in effect  \r\n☑︎ Show input just once before replacing it with the password character, never allowing any input to be revealed again after it has been obscured  \r\n☑︎ Support the use of the system-defined password character  \r\n☑︎ Support the use of a custom password character  \r\n☑︎ Support the use of no password character at all (which makes the control behave like a standard text box)  \r\n☑︎ Support variable delay in connection with the password character  \r\n☑︎ Observe system settings governing text quality (i.e., antialiasing)  \r\n☑︎ Support user input via the keyboard by momentarily displaying each typed character  \r\n☐ Support user input via the clipboard by momentarily displaying pasted content  \r\n☐ Support user input via drag-and-drop by momentarily displaying dropped content\r\n\r\n## Installation\r\n\r\nInstall [the NuGet package][NuGet-package]. You can do this using the Visual\r\nStudio NuGet plugin, or from the command line in your project folder:\r\n`nuget install PasswordTextBox-Control`.\r\n\r\nUsing the Visual Studio Windows Forms Designer is optional, and configuring it\r\nrequires some manual steps. Once _PasswordTextBoxControl.dll_ is a reference of\r\nyour project, you need to add the control to the Visual Studio Toolbox so it can\r\nbe dropped on forms in the designer:\r\n\r\n1. Click **Choose Toolbox Items…** in the **Tools** menu.\r\n2. On the **.NET Framework Components tab** of the **Choose Toolbox Items**\r\n   dialog box, click the **Browse…** button.\r\n3. Navigate to the _packages_ folder of your project, and within that\r\n   find the _PasswordTextBoxControl.dll_ version that corresponds to the .NET\r\n   Framework version you’re using.\r\n4. Click **OK** to save the changes to the toolbox.\r\n5. Look for _PasswordTextBox_ among _Common Controls_ in the toolbox.\r\n\r\n## Usage\r\n\r\nSee the [_PasswordTextBox.Test.Gui_ project][project-GUI-test] in this solution\r\nfor a demonstration of the behavior of the control. Salient properties include:\r\n\r\n* [_UseSystemPasswordChar_](#usesystempasswordchar-property)\r\n* [_PasswordChar_](#passwordchar-property)\r\n* [_PasswordCharDelay_](#passwordchardelay-property)\r\n* [_Text_](#text-property)\r\n\r\n### _UseSystemPasswordChar_ property\r\n\r\nIf `true`, this property makes user input appear as bullet characters after it\r\nmomentarily appears normally. If `false`, then\r\n[_PasswordChar_](#passwordchar-property) takes effect.\r\n\r\nThis property defaults to `true`.\r\n\r\n### _PasswordChar_ property\r\n\r\nThis property makes user input appear as a specific character after it\r\nmomentarily appears normally. The value of this property has no effect unless\r\n[_UseSystemPasswordChar_](#usesystempasswordchar-property) is `false`.\r\n\r\n\r\nThis property defaults to `'\\0'` (the null character), which makes the control\r\nbehave like a standard text box if\r\n[_UseSystemPasswordChar_](#usesystempasswordchar-property) is `false`.\r\n\r\n### _PasswordCharDelay_ property\r\n\r\nThis property controls the time in milliseconds during which user input appears\r\nnormally before appearing as the password character.\r\n\r\nThis property defaults to _1000_ (i.e., one second).\r\n\r\n### _Text_ property\r\n\r\nAs you might expect, this property stores user input regardless of any password\r\ncharacter that may be in effect.\r\n\r\n## Contributing\r\n\r\nTo submit a patch to the project:\r\n\r\n1. [Fork][fork-project] the official repository.\r\n2. Create your feature branch: `git checkout -b my-new-feature`.\r\n3. Commit your changes: `git commit -am 'Add some feature'`.\r\n4. Push to the branch: `git push origin my-new-feature`.\r\n5. Make sure all tests in the project are still passing, and add test coverage\r\n   of new behavior as appropriate.\r\n6. [Create][compare-project-branches] a new pull request.\r\n\r\nTo release a new version:\r\n\r\n1. Update the project history in [_History.md_][project-history], and commit.\r\n2. Update the version numbers in the _PasswordTextBox-Control.nuspec_ file and in\r\n   all _AssemblyInfo.cs_ files, and commit.\r\n3. Build the NuGet package: `nuget pack PasswordTextBox-Control.nuspec`.\r\n4. Publish the NuGet package: `nuget push PasswordTextBox-Control.X.Y.Z.nupkg`\r\n   where `X.Y.Z` is the version you just built.\r\n5. Tag the commit and push commits and tags.\r\n\r\n## License\r\n\r\nReleased under the [MIT License][MIT-License].\r\n\r\n[‘PasswordTextBox-Control’ NuGet package]:        https://img.shields.io/nuget/v/PasswordTextBox-Control.svg\r\n[PasswordTextBox control animated demonstration]: https://raw.githubusercontent.com/njonsson/PasswordTextBox-Control/master/demo.gif\r\n\r\n[project-history]:                         https://github.com/njonsson/PasswordTextBox-Control/blob/master/History.md                       \"‘PasswordTextBox Control’ project history\"\r\n[WinForms-UseSystemPasswordChar-property]: https://msdn.microsoft.com/en-us/library/system.windows.forms.textbox.usesystempasswordchar.aspx \"‘System​.Windows​.Forms​.TextBox​.UseSystemPasswordChar’ property in the .NET Framework Class Library\"\r\n[WinForms-PasswordChar-property]:          https://msdn.microsoft.com/en-us/library/system.windows.forms.textbox.passwordchar.aspx          \"‘System​.Windows​.Forms​.TextBox​.PasswordChar’ property in the .NET Framework Class Library\"\r\n[NuGet-package]:                           https://www.nuget.org/packages/PasswordTextBox-Control/                                          \"‘PasswordTextBox-Control’ NuGet package\"\r\n[project-GUI-test]:                        https://github.com/njonsson/PasswordTextBox-Control/tree/master/PasswordTextBoxControl.Test.Gui \"‘PasswordTextBox Control’ GUI test\"\r\n[fork-project]:                            https://github.com/njonsson/PasswordTextBox-Control/fork                                         \"Fork the official repository of ‘PasswordTextBox Control’\"\r\n[compare-project-branches]:                https://github.com/njonsson/PasswordTextBox-Control/compare                                      \"Compare branches of ‘PasswordTextBox Control’ repositories\"\r\n[MIT-License]:                             https://github.com/njonsson/PasswordTextBox-Control/blob/master/License.md                       \"MIT License claim for ‘PasswordTextBox Control’\"\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}