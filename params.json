{"name":"PasswordTextBox Control","tagline":"A Windows Forms control that enables the user to enter password text, momentarily showing each character entered","body":"# _PasswordTextBox_ Control\r\n\r\n> See what’s changed lately by reading the [project history][project-history].\r\n\r\nIt’s common knowledge that the\r\n[_UseSystemPasswordChar_][WinForms-UseSystemPasswordChar-property] and\r\n[_PasswordChar_][WinForms-PasswordChar-property] properties of the\r\n_System​.Windows​.Forms​.TextBox_ control let you obscure user input of secret\r\ninformation such as passwords. But you may have wanted behavior such as\r\ntouch-screen devices exhibit: user input is **momentarily displayed before being\r\nreplaced** by a password character. _TextBox_ can’t do that.\r\n\r\n_PasswordTextBox_ is what you were looking for.\r\n\r\n![PasswordTextBox control animated demonstration]\r\n\r\n## Features\r\n\r\n- [x] Accept user input via the keyboard, the clipboard, and drag-and-drop\r\n- [x] Prevent the user or system from copying control content to the clipboard if\r\n      a password character is in effect\r\n- [x] Show input just once before replacing it with the password character, never\r\n      allowing any input to be revealed again after it has been obscured\r\n- [x] Support the use of the system-defined password character\r\n- [x] Support the use of a custom password character\r\n- [x] Support the use of no password character at all (which makes the control\r\n      behave like a standard text box)\r\n- [x] Support variable delay in connection with the password character\r\n- [x] Observe system settings governing text quality (i.e., antialiasing)\r\n- [x] Support user input via the keyboard by momentarily displaying each typed\r\n      character\r\n- [ ] Support user input via the clipboard by momentarily displaying pasted\r\n      content\r\n- [ ] Support user input via drag-and-drop by momentarily displaying dropped\r\n      content\r\n\r\n## Installation\r\n\r\nUse _PasswordTextBox_ by adding _PasswordTextBoxControl.dll_ as a reference\r\nwithin your Windows Forms project.\r\n\r\n## Usage\r\n\r\nSee the [_PasswordTextBox.Test.Gui_ project][project-GUI-test] in this solution\r\nfor a demonstration of the behavior of the control. Salient properties include:\r\n\r\n* [_UseSystemPasswordChar_](#usesystempasswordchar-property)\r\n* [_PasswordChar_](#passwordchar-property)\r\n* [_PasswordCharDelay_](#passwordchardelay-property)\r\n* [_Text_](#text-property)\r\n\r\n### _UseSystemPasswordChar_ property\r\n\r\nIf `true`, this property makes user input appear as bullet characters after it\r\nmomentarily appears normally. If `false`, then\r\n[_PasswordChar_](#passwordchar-property) takes effect.\r\n\r\nThis property defaults to `true`.\r\n\r\n### _PasswordChar_ property\r\n\r\nThis property makes user input appear as a specific character after it\r\nmomentarily appears normally. The value of this property has no effect unless\r\n[_UseSystemPasswordChar_](#usesystempasswordchar-property) is `false`.\r\n\r\n\r\nThis property defaults to `'\\0'` (the null character), which makes the control\r\nbehave like a standard text box if\r\n[_UseSystemPasswordChar_](#usesystempasswordchar-property) is `false`.\r\n\r\n### _PasswordCharDelay_ property\r\n\r\nThis property controls the time in milliseconds during which user input appears\r\nnormally before appearing as the password character.\r\n\r\nThis property defaults to _1000_ (i.e., one second).\r\n\r\n### _Text_ property\r\n\r\nAs you might expect, this property stores user input regardless of any password\r\ncharacter that may be in effect.\r\n\r\n## Contributing\r\n\r\nTo submit a patch to the project:\r\n\r\n1. [Fork][fork-project] the official repository.\r\n2. Create your feature branch: `git checkout -b my-new-feature`.\r\n3. Commit your changes: `git commit -am 'Add some feature'`.\r\n4. Push to the branch: `git push origin my-new-feature`.\r\n5. Make sure all tests in the project are still passing, and add test coverage\r\n   of new behavior as appropriate.\r\n6. [Create][compare-project-branches] a new pull request.\r\n\r\nTo release a new version:\r\n\r\n1. Update the project history in [_History.md_][project-history], and commit.\r\n2. Update the version numbers in all _AssemblyInfo.cs_ files, and commit.\r\n3. Tag the commit and push commits and tags.\r\n\r\n## License\r\n\r\nReleased under the [MIT License][MIT-License].\r\n\r\n[PasswordTextBox control animated demonstration]: https://raw.githubusercontent.com/njonsson/PasswordTextBox-Control/master/demo.gif\r\n\r\n[project-history]:                         https://github.com/njonsson/PasswordTextBox-Control/blob/master/History.md                       \"‘PasswordTextBox Control’ project history\"\r\n[WinForms-UseSystemPasswordChar-property]: https://msdn.microsoft.com/en-us/library/system.windows.forms.textbox.usesystempasswordchar.aspx \"‘System​.Windows​.Forms​.TextBox​.UseSystemPasswordChar’ property in the .NET Framework Class Library\"\r\n[WinForms-PasswordChar-property]:          https://msdn.microsoft.com/en-us/library/system.windows.forms.textbox.passwordchar.aspx          \"‘System​.Windows​.Forms​.TextBox​.PasswordChar’ property in the .NET Framework Class Library\"\r\n[project-GUI-test]:                        https://github.com/njonsson/PasswordTextBox-Control/tree/master/PasswordTextBoxControl.Test.Gui \"‘PasswordTextBox Control’ GUI test\"\r\n[fork-project]:                            https://github.com/njonsson/PasswordTextBox-Control/fork                                         \"Fork the official repository of ‘PasswordTextBox Control’\"\r\n[compare-project-branches]:                https://github.com/njonsson/PasswordTextBox-Control/compare                                      \"Compare branches of ‘PasswordTextBox Control’ repositories\"\r\n[MIT-License]:                             https://github.com/njonsson/PasswordTextBox-Control/blob/master/License.md                       \"MIT License claim for ‘PasswordTextBox Control’\"\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}